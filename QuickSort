#include <iostream>
#include <string>
#define MAXSIZE 101
using namespace std;

typedef struct {
	int * data;
	int length;
    int listsize;
}SqList;

int InitSqList (SqList &L)
{
	L.data=new int(MAXSIZE);
	if(!L.data) return -1;
	for(int i=0;i<MAXSIZE;i++)
	   L.data[i]=MAXSIZE-i;//倒序初始化 
	L.length=0;
	L.listsize=MAXSIZE;
	return 1;
}

int Partition (SqList &L,int low,int high)
{
	L.data[0]=L.data[low];
	while (low<high)
	{
		while (low<high&&L.data[high]>=L.data[0]) high--;
		L.data[low]=L.data[high];
		while (low<high&&L.data[low]<=L.data[0]) low++;
		L.data[high]=L.data[low];
	}
	L.data[low]=L.data[0];
	return low;
}

void QuickSort (SqList &L,int low,int high)
{
	if (low<high)
	{
		int pivotloc=Partition (L,low,high);
		QuickSort (L,low,pivotloc-1);
		QuickSort (L,pivotloc+1,high);
	}
}

int main ()
{
	SqList L;
	InitSqList(L);
	QuickSort (L,1,100);
	for(int i=1;i<101;i++)
	{
		cout<<L.data[i]<<endl;
	}
}
